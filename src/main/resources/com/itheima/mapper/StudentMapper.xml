<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.StudentMapper">
    <!-- 条件查询所有学员 -->
    <select id="list" resultType="com.itheima.pojo.Student">
        select s.*, c.name as clazzName
        from student s
        left join clazz c on s.clazz_id = c.id
        <where>
            <if test="name != null and name != ''">
                and s.name like concat('%', #{name}, '%')
            </if>
            <if test="degree != null">
                and s.degree = #{degree}
            </if>
            <if test="clazzId != null">
                and s.clazz_id = #{clazzId}
            </if>
        </where>
        order by s.create_time desc
    </select>
    
    <!-- 更新学员信息 -->
    <update id="update">
        update student
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="no != null and no != ''">no = #{no},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="idCard != null and idCard != ''">id_card = #{idCard},</if>
            <if test="isCollege != null">is_college = #{isCollege},</if>
            <if test="address != null">address = #{address},</if>
            <if test="degree != null">degree = #{degree},</if>
            <if test="graduationDate != null">graduation_date = #{graduationDate},</if>
            <if test="clazzId != null">clazz_id = #{clazzId},</if>
            update_time = now()
        </set>
        where id = #{id}
    </update>
    
    <!-- 批量删除学员 -->
    <delete id="deleteByIds">
        delete from student where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    
    <!-- 统计学员学历数据 -->
    <select id="countByDegree" resultType="java.util.Map">
        select 
            case 
                when degree = 1 then '初中'
                when degree = 2 then '高中'
                when degree = 3 then '大专'
                when degree = 4 then '本科'
                when degree = 5 then '硕士'
                else '其他' 
            end as name,
            count(*) as value 
        from student 
        group by degree
    </select>
    
    <!-- 统计班级人数数据 -->
    <select id="countByClazz" resultType="java.util.Map">
        select 
            c.name as name,
            count(s.id) as value
        from student s
        join clazz c on s.clazz_id = c.id
        group by s.clazz_id, c.name
    </select>
</mapper> 